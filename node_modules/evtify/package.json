{
  "name": "evtify",
  "main": "evtify",
  "version": "0.1.0",
  "description": "Event emitter for Node and browsers",
  "keywords": [
    "events"
  ],
  "homepage": "http://buunguyen.github.io/evtify",
  "repository": {
    "type": "git",
    "url": "git@github.com:buunguyen/evtify.git"
  },
  "license": "MIT",
  "author": {
    "name": "Buu Nguyen",
    "email": "buunguyen@gmail.com"
  },
  "readme": "evtify\n====\n\nEventify any object, Node and browsers.\n```\nnpm install evtify\n```\n\nSetup: \n```javascript\nvar obj = {}, anotherObj = {};\nevtify(obj, anotherObj, ...);\n...\n```\nOr:\n```javascript\nfunction Person() {};\nPerson.prototype = new evtify();\nvar obj = new Person();\n...\n```\n\nRegister handler for one or more events with optional context:\n```javascript\nobj.on('evt1 evt2', function(eventName, params...) {\n\t\t// 'this' will be 'window'\n\t})\n   \t.on('evt3', function(eventName, params...) { \n   \t\t// 'this' will be 'context'\n   \t}, context);\n```\n\nTrigger one or more events:\n```javascript\nobj.trigger('evt1 evt2 evt3', args...);\n```\n\nRemove all handlers:\n```javascript\nobj.off(); \n```\n\nRemove handlers of specific events:\n```javascript\nobj.off('evt1 evt2'); \n```\n\nRemove a specific handler of specific events:\n```javascript\nobj.off('evt1 evt2', handler); \n```\n\nAliases:\n* `on`: `addEventListener`\n* `off`: `removeEventListener`\n* `trigger`: `fire`\n\nThat's it!  Check out the [specs](https://github.com/buunguyen/evtify/blob/master/test/evtify.specs.js) for more details.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/buunguyen/evtify/issues"
  },
  "_id": "evtify@0.1.0",
  "_from": "evtify@*"
}
